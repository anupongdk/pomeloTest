//
//  PickUpViewController.swift
//  Pomelo
//
//  Created by anupong dorkkunm on 26/8/2563 BE.
//  Copyright (c) 2563 anupong dorkkunm. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PickUpDisplayLogic: class
{
  func displaySomething(viewModel: PickUpModel.Something.ViewModel)
  func displayPickupData(data:PickupData)
}

class PickUpViewController: UIViewController, PickUpDisplayLogic
{   
  var interactor: PickUpBusinessLogic?
  var router: (NSObjectProtocol & PickUpRoutingLogic & PickUpDataPassing)?
    @IBOutlet weak var tablePickupList: UITableView!
    
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PickUpInteractor()
    let presenter = PickUpPresenter()
    let router = PickUpRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor

    
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    loadPickupData()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func loadPickupData()
  {
//    let request = PickUp.Something.Request()
//    interactor?.doSomething(request: request)
    interactor?.getData()
  }
  
  func displaySomething(viewModel: PickUpModel.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    func displayPickupData(data:PickupData) {
        tablePickupList.register(UINib(nibName: "PickupTableViewCell", bundle: nil), forCellReuseIdentifier: "PickupTableViewCell")
        tablePickupList.delegate = self
        tablePickupList.dataSource = self
        tablePickupList.reloadData()
    }
}

extension PickUpViewController:UITableViewDelegate,UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return interactor?.getDataLoaded().count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let data = interactor?.getDataLoaded()[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "PickupTableViewCell") as? PickupTableViewCell
        cell?.setData(data: data!)
        return cell!
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
}
