//
//  PickUpInteractor.swift
//  Pomelo
//
//  Created by anupong dorkkunm on 26/8/2563 BE.
//  Copyright (c) 2563 anupong dorkkunm. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PickUpBusinessLogic
{
  func doSomething(request: PickUpModel.Something.Request)
  func getData()
  func getDataLoaded() -> [Pickup]
    
}

protocol PickUpDataStore
{
  //var name: String { get set }
}

class PickUpInteractor: PickUpBusinessLogic, PickUpDataStore
{
  var presenter: PickUpPresentationLogic?
  var worker: PickUpWorker?
  //var name: String = ""
    
  var mainPickupData:PickupData?

  
  // MARK: Do something
  
  func doSomething(request: PickUpModel.Something.Request)
  {
    worker = PickUpWorker()
    worker?.doSomeWork()

    let response = PickUpModel.Something.Response()
    presenter?.presentSomething(response: response)
  }
    
    func getData()  {
        worker = PickUpWorker()
        worker?.loadPickupData(completionHandler: {[weak self] (data, err) in
            if data != nil {
                self?.mainPickupData = data
                self?.presenter?.presentPickupData(data: data!)
            }
            
        })
    }
    
    func getDataLoaded() -> [Pickup] {
        
        return mainPickupData?.pickup?.filter{$0.active == true && $0.alias != "" } ?? [Pickup]()
    }
    
    
    func sortByDistance() {
        
    }
    
    func updateCurrentLocation() {
        
    }
    
    
    
    
}
